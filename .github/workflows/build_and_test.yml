name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'main' && github.sha || 'anysha' }}
  cancel-in-progress: true

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        postgresql: [ 12, 13, 14, 15, 16 ]
        include:
          - os: macos-13
            postgresql: 15
          - os: macos-13
            postgresql: 16

    runs-on: ${{ matrix.os }}

    steps:
      - uses: Homebrew/actions/setup-homebrew@master

      # TODO: Remove after postgresql@16 is available in homebrew/core
      - if: matrix.postgresql == 16
        run: brew tap bayandin/tap

      - name: brew install postgresql
        run: |
          brew install ${FORMULA}
          brew services start ${FORMULA}

          echo "PG_CONFIG=$(brew --prefix ${FORMULA})/bin/pg_config" >> $GITHUB_ENV
        env:
          FORMULA: postgresql@${{ matrix.postgresql }}

      - uses: actions/checkout@v3

      - run: make
      - run: make install
      - run: make installcheck

      - if: failure()
        run: cat regression.diffs || true

  build-and-test-on-neon:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        postgresql: [ 14, 15 ]
        include:
          - os: macos-13
            postgresql: 15

    runs-on: ${{ matrix.os }}

    steps:
      - uses: Homebrew/actions/setup-homebrew@master

      - run: brew tap bayandin/tap

      - name: brew install neon
        run: |
          brew install ${FORMULA}

          echo "$(brew --prefix openssl@3)/bin" >> $GITHUB_PATH
          echo "PG_CONFIG=$(brew ruby -e 'puts "neon-postgres".to_sym.f.pg_bin_for("v${{ matrix.postgresql }}")')/pg_config" >> $GITHUB_ENV

          $(brew --prefix ${FORMULA})/bin/neon-local --version
        env:
          FORMULA: bayandin/tap/neon-local

      - name: Start neon
        run: |
          neon-local start
          neon-local tenant create --pg-version ${{ matrix.postgresql }} --set-default
          neon-local endpoint start main --pg-version ${{ matrix.postgresql }} --pg-port 60000

      - uses: actions/checkout@v3

      - run: make
      - run: make install
      - name: make installcheck
        run: |
          export PGPORT=60000
          export PGUSER=cloud_admin

          make installcheck

      - if: failure()
        run: cat regression.diffs || true
